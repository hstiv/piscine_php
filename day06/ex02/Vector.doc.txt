<- Vector ----------------------------------------------------------------------
The Vector Class provides read only accessors for its four attributes.

• The Class’ constructor is waiting for an array. The following keys are required:
’dest’: the vector’s destination vertex, mandatory.
’orig’: the vector’s origin vertex, optional, by default is worth a new instance of
the x=0, y=0, z=0, w=1 vertex.

• The Class must include a Boolean static attribute called verbose to control the
displays related to the use of the Class. This attribute is initially False.

• The Vector Class has a __toString method. See example output for formatting.

• If and only if the static attribute verbose is true, then the Class constructor and
destructor will produce an output. See example output for formatting.

• The Class has a static method called doc that returns the documentation of
the class in a string (in this specific case the documentation does not have to be
long). The content of the documentation must be read from a Vector.doc.txt file
and is left to your discretion as stipulated in last previous exercise.

• Methods from the Vector Class should never modify the current instance. This
behavior is reinforced by the absence of setters. Once a vector is instantiated, its
status is final.

• Vector Class has the following public methods:

float magnitude() : returns the vector’s length (or "norm").

Vector normalize() : returns a normalized version of the vector. If the vector is
already normalized, returns a fresh copy of the vector.

Vector add( Vector $rhs ) : returns the sum vector of both vectors.

Vector sub( Vector $rhs ) : returns the difference vector of both vectors.

Vector opposite() : returns the opposite vector.

Vector scalarProduct( $k ) : returns the multiplication of the vector with a
scalar.

float dotProduct( Vector $rhs ) : returns the scalar multiplication of both vectors.

float cos( Vector $rhs ) : returns the angle’sAppendix cosine between both vectors.

Vector crossProduct( Vector $rhs ) : returns the cross multiplication of both
vectors (right-hand mark!)
---------------------------------------------------------------------- Vector ->