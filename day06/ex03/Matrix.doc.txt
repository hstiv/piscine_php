<- Matrix ----------------------------------------------------------------------

• The identity matrix
• The translation matrices ("translate")
• The scale change matrices ("scale")
• The rotation matrices ("rotate")
• the projection matrices ("project")

Our matrices will ALWAYS be four rows and four columns big!!!!

Our Matrix Class must have seven Class constants: IDENTITY, SCALE, RX, RY, RZ,
TRANSLATION and PROJECTION.

• The Class’ constructor is waiting for an array. The following keys are required:
’preset’: the matrix type to, mandatory. The value must be one of the Class
constants previoulsy defined.
’scale’: the scale factor, mandatory when ’preset’ is worth SCALE.
’angle’: the rotation angle in radians, mandatory when ’preset’ is worth RX, RY
or RZ.
’vtc’: translation vector, mandatory when ’preset’ is worth TRANSLATION.
’fov’: projection field of view in degrees mandatory when ’preset’ is worth PROJECTION.
’ratio’: projected image ratio, mandatory when ’preset’ is worth PROJECTION.
’near’: projection’s near clipping plane mandatory when ’preset’ is worth PROJECTION.
’far’: projection’s far clipping plane mandatory when ’preset’ is worth PROJECTION.

• The Class must include a Boolean static attribute called verbose to control the
displays related to the use of the Class. This attribute is initially False.

• The Matrix Class must have a __toString method.

Methods:

!! Matrix mult( Matrix $rhs ) : returns the multiplication of both matrices.


!! Vertex transformVertex( Vertex $vtx ) : returns a new vertex resulting from
the transformation of the vertex by the matrix.
---------------------------------------------------------------------- Matrix ->